using System;
using System.Data;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.Security;
using System.Security.Cryptography;

class Programm
{
    delegate double elem(double x, double i);
    static double elem1(double x, double i)
    {
        return Math.Cos(i * x * 0.0175) / factorial(i); 
    }
    static double elem2(double x, double i)
    {
        return Math.Pow(-1, i) * (Math.Cos(i * x * 0.0175) / (i * i));
    }
    static double sum(elem f, double x)
    {
        double sum = 0;
        for(int i = 1; i > 0; i++)
        {
            if(Math.Abs(f(x, i)) < 0.0001)
            {
                return sum;
            }
            sum += f(x, i);
        }
        return 0;
    }
    static double y1(double x)
    {
        double y = 0;
        y = Math.Pow(Math.E, Math.Cos(x * 0.0175)) * Math.Cos(Math.Sin(x * 0.0175));
        return y;
    }
    static double y2(double x)
    {
        double y = 0;
        y = ((x * x) - (Math.Pow(Math.PI, 2) / 3)) / (4);
        return y;
    }
    static double factorial(double x)
    {
        double fact = 1;
        for (double i = 1; i <= x; i++)
        {
            fact = fact * i;
        }
        return fact;
    }

    static void Main()
    {
        for (double x = 0.1; x <= 1; x += 0.1)
        {
            double s = sum(elem1, x);
            double y0 = y1(x);
            Console.WriteLine(s + "    " + y0);
        }

        Console.WriteLine();

        for (double x = (Math.PI / 5); x <= Math.PI; x += (Math.PI / 25))
        {
            double s = sum(elem2, x);
            double y0 = y2(x);
            Console.WriteLine(s + "    " + y0);
        }
    }
}
