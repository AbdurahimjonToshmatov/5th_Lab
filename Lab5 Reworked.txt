using System;
using System.Security.Cryptography;

namespace _5Lab
{
    internal class Program
    {

        static int FindMin(int[,] x)
        {
            int min = x[0, 0];
            for (int i = 0; i < x.GetLength(0); i++)
            {
                for (int j = 0; j < x.GetLength(1); j++)
                {
                    if (x[i, j] < min)
                    {
                        min = x[i, j];
                    }
                }
            }

            return min;
        }

        static int[,] CopyMatrix(int[,] a)
        {
            int[,] b = new int[a.GetLength(0), a.GetLength(1)];
            for (int i = 0; i < a.GetLength(0); i++)
            {
                for (int j = 0; j < a.GetLength(1); j++)
                {
                    b[i, j] = a[i, j];
                }
            }

            return b;
        }
        static void WriteMatrix(int[,] x)
        {
            int rows = x.GetLength(0);
            int columns = x.GetLength(1);

            for (int i = 0; i < rows; i++)
            {
                for (int j = 0; j < columns; j++)
                    Console.Write("{0, -5}", x[i, j]);
                Console.WriteLine();
            }
            Console.WriteLine();
        }
        static int[,] MatrixChange(int[,] x, out int[,] b)
        {
            int n = 0;

            b = CopyMatrix(x);

            int[,] c = CopyMatrix(x);

            int max = x[0, 0];
            int min = FindMin(x);
            int i_max = 0;
            int j_max = 0;

            int[] MassOfMax = new int[5];
            int mass_i = 0;

            do
            {
                max = x[0, 0];
                i_max = 0;
                j_max = 0;

                for (int i = 0; i < x.GetLength(0); i++)
                {
                    for (int j = 0; j < x.GetLength(1); j++)
                    {
                        if (x[i, j] > max)
                        {
                            max = x[i, j];
                            i_max = i;
                            j_max = j;
                        }
                    }
                }

                if (max > 0)
                {
                    b[i_max, j_max] = max * 2;
                }
                else b[i_max, j_max] = max / 2;

                x[i_max, j_max] = min;

                MassOfMax[mass_i] = b[i_max, j_max];

                mass_i++;
                n++;

            } while (n < 5);

            for (int i = 0; i < x.GetLength(0); i++)
            {
                for (int j = 0; j < x.GetLength(1); j++)
                {
                    if (b[i, j] <= max && b[i, j] != MassOfMax[0] && b[i, j] != MassOfMax[1] && b[i, j] != MassOfMax[2] && b[i, j] != MassOfMax[3] && b[i, j] != MassOfMax[4])
                    {
                        if (b[i, j] > 0)
                        {
                            b[i, j] = b[i, j] / 2;
                        }
                        else b[i, j] = b[i, j] * 2;
                    }
                }
            }

            return b;
        }

        static void Main(string[] args)
        {
            int num = 0;
            int[,] A = new int[2, 4];
            int[,] B = new int[3, 4];
            Random r = new Random();

            Console.WriteLine("Какие числа будем использовать? Случайные - 1 , Которые использовали при прошлой проверке - 2");
            Int32.TryParse(Console.ReadLine(), out num);
            if (num == 1)
            {
                for (int i = 0; i < A.GetLength(0); i++)
                {
                    for (int j = 0; j < A.GetLength(1); j++)
                    {
                        A[i, j] = r.Next(-5, 20);
                    }
                }

                for (int i = 0; i < B.GetLength(0); i++)
                {
                    for (int j = 0; j < B.GetLength(1); j++)
                    {
                        B[i, j] = r.Next(-20, 20);
                    }
                }
            }
            else if (num == 2)
            {
                A = new int[2, 4]
                {
                  {-2, 9, 8 , 8 },
                  {9, 9, 8, 8 }
                };

                B = new int[3, 4]
                {
                  {0, -6, -94 , -43 },
                  {-55, -1, -1, -11 },
                  {-4, -4, -4, -4 }
                };
            }

            Console.WriteLine("Исходная матрица А:");
            WriteMatrix(A);

            Console.WriteLine("Исходная матрица B:");
            WriteMatrix(B);

            MatrixChange(A, out A);
            Console.WriteLine("Измененная матрица А: ");
            WriteMatrix(A);

            MatrixChange(B, out B);
            Console.WriteLine("Измененная матрица B: ");
            WriteMatrix(B);
        }
    }
}